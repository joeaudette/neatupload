<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<script type="text/javascript" src="../../NeatUpload/SWFUpload.js"></script>
	<script type="text/javascript" src="../../NeatUpload/NeatUpload.js"></script>
    <title>Static Upload Page Example</title>
</head>
<body>
<form id="formID" name="formID" action="StaticUploadHandler.ashx" method="post" enctype="multipart/form-data">
	InputFile: <input id="fileID" type="file" name="NeatUpload_replacedByScript-fileField" /><br />
	MultiFile:<br />
	<!-- Note: No space allowed between the next 2 elements.  The div must be the nextSibling of the input element. -->
	<input id="multiFileID" type="file" name="NeatUpload_replacedByScript-multiFileField" /><div id='NeatUploadDiv_multiFileID' style='position: relative; display: none;'>
		<input type="button" name="multiFileButton" value="Add File..." id="multiFileButton" />
	</div><br />
	<input id="uploadButtonID" type="submit" name="upload" value="Upload with type='submit' Button" />
	<input id="uploadButtonID2" type="button" onclick="document.getElementById('formID').submit()" name="upload2" value="Upload by calling form.submit()" />
	<input id="cancelButtonID" type="submit" name="cancel" value="Cancel" /><br />
	Progress:<br />
	<div id="progressID"></div><br />
<script type="text/javascript">
	// Generate long random string so uploads don't interfere with each other.
	// TODO: Move to NeatUpload.js
	var postBackID = Math.round(Math.random() * 1000000000);
	// The application path is the path to this page with the last 3 elements removed.
	var appPath = document.location.pathname.split('/').slice(0, -3).join('/');
	NeatUploadMultiFileCreate("multiFileID", postBackID,
		appPath,
		appPath + '/NeatUpload/MultiRequestUploadHandler.ashx',
		'NeatUpload_PostBackID',
		{NeatUpload_PostBackID : postBackID,
		 NeatUpload_MultiRequestControlID: 'multiFileID',
		 NeatUpload_ArmoredCookies: null
		},
		 true,
		 '',
		 '*.*',
		 '',
		 'NeatUploadDiv_multiFileID',
		 'NeatUploadConfig_multiFileID'
);

	NeatUploadInputFileCreate("fileID", postBackID);

	var pb = new NeatUploadPB("progressID", postBackID, "", "500px", "100px", ["uploadButtonID", "uploadButtonID2"], "IsFilesToUpload()");
	NeatUploadPB.prototype.Bars["progressID"] = pb;
	var ProgressHandlerPath = appPath + "/Brettle.Web.NeatUpload/tests/ProgressHandler.ashx";
	var UpdateDelayMs = 1000;
	pb.Display = function() {
		var postBackID = this.UploadForm.GetPostBackID();
		var progressDiv = document.getElementById("progressID");
		var lastUpdate = new Date();
		var timeoutId = null;
		RefreshWithAjax();

		function RefreshWithAjax() {
			var startTime = (new Date()).getTime();
			var req = null;
			if (typeof (XMLHttpRequest) != 'undefined') {
				req = new XMLHttpRequest();
			} else {
				req = new ActiveXObject('MSXML2.XMLHTTP.3.0');
			}
			req.onreadystatechange = UpdateHtml;
			req.open('GET', ProgressHandlerPath + "?postBackID=" + postBackID);
			req.send(null);

			function UpdateHtml() {
				if (typeof (req) != 'undefined' && req != null && req.readyState == 4 && req.status == 200) {
					var responseText = req.responseText;
					var uploadState = eval("(" + responseText + ")");
					progressDiv.innerHTML = "<pre>" + responseText + "</pre>";
					if (uploadState.Status == 'NormalInProgress' || uploadState.Status == 'ChunkedInProgress' || uploadState.Status == 'ProcessingInProgress' || uploadState.Status == 'Unknown') {
						var curTime = (new Date()).getTime();
						var delay = Math.max(UpdateDelayMs - (curTime - startTime), 1);
						timeoutId = setTimeout(RefreshWithAjax, delay);
					}
				}
			}
		}
	}
</script>
</form>
</body>
</html>
